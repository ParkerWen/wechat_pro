// Code generated by goctl. DO NOT EDIT.
package types

type NotifyReq struct {
	Action      string `json:"action"`
	ID          string `json:"id"`
	Prompt      string `json:"prompt"`
	PromptEn    string `json:"promptEn"`
	Description string `json:"description"`
	State       string `json:"state"`
	SubmitTime  int64  `json:"submitTime"`
	StartTime   int64  `json:"startTime"`
	FinishTime  int64  `json:"finishTime"`
	ImageUrl    string `json:"imageUrl"`
	Status      string `json:"status"`
	FailReason  string `json:"failReason"`
}

type NotifyResp struct {
	ErrCode int    `json:"err_code"`
	ErrMsg  string `json:"err_msg"`
}

type ImagineReq struct {
	Prompt     string `json:"prompt"`
	State      string `json:"state"`
	NotifyHook string `json:"notifyHook"`
}

type ImagineResp struct {
	Code int64  `json:"code"`
	Msg  string `json:"msg"`
}

type UpscaleReq struct {
	TaskId string `json:"task_id"`
	Index  int64  `json:"index"`
}

type UpscaleResp struct {
	Code int64  `json:"code"`
	Msg  string `json:"msg"`
}

type VariationReq struct {
	TaskId string `json:"task_id"`
	Index  int64  `json:"index"`
}

type VariationResp struct {
	Code int64  `json:"code"`
	Msg  string `json:"msg"`
}

type CallbackReq struct {
	MsgSignature string `form:"msg_signature"`
	TimeStamp    string `form:"timestamp"`
	Nonce        string `form:"nonce"`
	EchoStr      string `form:"echostr,optional"`
}

type CallbackResp struct {
	ErrCode int    `json:"err_code"`
	ErrMsg  string `json:"err_msg"`
	Data    []byte `json:"data"`
}

type UploadTempFileReq struct {
	AccessToken string `json:"access_token"`
	Media       string `json:"media"`
}

type UploadTempFileResp struct {
	ErrCode   int64  `json:"errcode"`
	ErrMsg    string `json:"errmsg"`
	Type      string `json:"type"`
	MediaId   string `json:"media_id"`
	CreatedAt string `json:"created_at"`
}

type Source struct {
	IconUrl   string `json:"icon_url"`
	Desc      string `json:"desc"`
	DescColor int64  `json:"desc_color"`
}

type Action struct {
	Text string `json:"text"`
	Key  string `json:"key"`
}

type ActionMenu struct {
	Desc       string   `json:"desc"`
	ActionList []Action `json:"action_list"`
}

type MainTitle struct {
	Title string `json:"title"`
	Desc  string `json:"desc"`
}

type QuoteArea struct {
	Type      int64  `json:"type"`
	Url       string `json:"url"`
	Title     string `json:"title"`
	QuoteText string `json:"quote_text"`
}

type EmphasisContent struct {
	Title string `json:"title"`
	Desc  string `json:"desc"`
}

type HorizontalContent struct {
	Type    int64  `json:"type"`
	Keyname string `json:"keyname"`
	Value   string `json:"value"`
	Url     string `json:"url"`
	MediaId string `json:"media_id"`
	UserId  string `json:"userid"`
}

type Jump struct {
	Type     int64  `json:"type"`
	Title    string `json:"title"`
	Url      string `json:"url"`
	Appid    string `json:"appid"`
	Pagepath string `json:"pagepath"`
}

type CardAction struct {
	Type     int64  `json:"type"`
	Url      string `json:"url"`
	Appid    string `json:"appid"`
	Pagepath string `json:"pagepath"`
}

type TextNoticetemplateCard struct {
	CardType              string              `json:"card_type"`
	Source                Source              `json:"source"`
	ActionMenu            ActionMenu          `json:"action_menu"`
	TaskId                string              `json:"task_id"`
	MainTitle             MainTitle           `json:"main_title"`
	QuoteArea             QuoteArea           `json:"quote_area"`
	EmphasisContent       EmphasisContent     `json:"emphasis_content"`
	SubTitleText          string              `json:"sub_title_text"`
	HorizontalContentList []HorizontalContent `json:"horizontal_content_list"`
	JumpList              []Jump              `json:"jump_list"`
	CardAction            CardAction          `json:"card_action"`
}

type Option struct {
	Id   string `json:"id"`
	Text string `json:"text"`
}

type ButtonSelection struct {
	QuestionKey string   `json:"question_key"`
	Title       string   `json:"title"`
	OptionList  []Option `json:"option_list"`
	SelectedId  string   `json:"selected_id"`
}

type Button struct {
	Type  int64  `json:"type"`
	Text  string `json:"text"`
	Style int64  `json:"style"`
	Key   string `json:"key"`
	Url   string `json:"url"`
}

type ButtonInteractionTemplateCard struct {
	CardType              string              `json:"card_type"`
	Source                Source              `json:"source"`
	ActionMenu            ActionMenu          `json:"action_menu"`
	TaskId                string              `json:"task_id"`
	MainTitle             MainTitle           `json:"main_title"`
	QuoteArea             QuoteArea           `json:"quote_area"`
	SubTitleText          string              `json:"sub_title_text"`
	HorizontalContentList []HorizontalContent `json:"horizontal_content_list"`
	CardAction            CardAction          `json:"card_action"`
	ButtonSelection       ButtonSelection     `json:"button_selection"`
	ButtonList            []Button            `json:"button_list"`
}

type TemplateCardReqComm struct {
	ToUser                 string `json:"touser"`
	ToParty                string `json:"toparty"`
	ToTag                  string `json:"totag"`
	MsgType                string `json:"msgtype"`
	AgentID                string `json:"agentid"`
	EnableIDTrans          int    `json:"enable_id_trans"`
	EnableDuplicateCheck   int    `json:"enable_duplicate_check"`
	DuplicateCheckInterval int    `json:"duplicate_check_interval"`
}

type TemplateCardRespComm struct {
	ErrCode        int64  `json:"errcode"`
	ErrMsg         string `json:"errmsg"`
	InvalidUser    string `json:"invaliduser"`    // 不合法的userid，不区分大小写，统一转为小写
	InvalidParty   string `json:"invalidparty"`   // 不合法的partyid
	InvalidTag     string `json:"invalidtag"`     // 不合法的标签id
	UnlicensedUser string `json:"unlicenseduser"` // 没有基础接口许可(包含已过期)的userid
	MsgID          string `json:"msgid"`          // 消息id
	ResponseCode   string `json:"response_code"`
}

type SendTextNoticeTemplateCardReq struct {
	TemplateCardReqComm
	TemplateCard TextNoticetemplateCard `json:"template_card"`
}

type SendTextNoticeTemplateCardResp struct {
	TemplateCardRespComm
}

type SendButtonInteractionTemplateCardReq struct {
	TemplateCardReqComm
	TemplateCard ButtonInteractionTemplateCard `json:"template_card"`
}

type SendButtonInteractionTemplateCardResp struct {
	TemplateCardRespComm
}
