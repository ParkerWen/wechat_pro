// Code generated by goctl. DO NOT EDIT.
package types

type RegisterByEmailReq struct {
	Email           string `json:"email" validate:"required,email"`
	Password        string `json:"password" validate:"required,eqcsfield=ConfirmPassword"`
	ConfirmPassword string `json:"confirm_password" validate:"required,eqcsfield=Password"`
}

type RegisterByEmailResp struct {
	Code int64  `json:"code"`
	Msg  string `json:"msg"`
}

type LoginByEmailReq struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type LoginByEmailResp struct {
	Code int64                  `json:"code"`
	Msg  string                 `json:"msg"`
	Data map[string]interface{} `json:"data"`
}

type RegisterByPhoneReq struct {
	Phone           int64  `json:"phone"`
	Password        string `json:"password"`
	ConfirmPassword string `json:"confirm_password"`
}

type RegisterByPhoneResp struct {
	Code int64  `json:"code"`
	Msg  string `json:"msg"`
}

type LoginByPhoneReq struct {
	Phone    int64  `json:"phone"`
	Password string `json:"password"`
}

type LoginByPhoneResp struct {
	Code int64                  `json:"code"`
	Msg  string                 `json:"msg"`
	Data map[string]interface{} `json:"data"`
}

type GenerateTokenReq struct {
	UserId int64 `json:"user_id"`
}

type GenerateTokenResp struct {
	AccessToken  string `json:"asscess_token"`
	AccessExpire int64  `json:"access_expire"`
	RefreshAfter int64  `json:"refresh_after"`
}

type FetchReq struct {
}

type FetchResp struct {
	Code int64                  `json:"code"`
	Msg  string                 `json:"msg"`
	Data map[string]interface{} `json:"data"`
}
