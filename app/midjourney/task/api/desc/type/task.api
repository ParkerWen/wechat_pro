syntax = "v1"

info(
	title: "Midjourney Task"
	desc: "Midjourney Task"
	author: "wenshiye"
	version: "v1"
)

type Task {
	Id          int64  `json:"id"`
	TaskId      string `json:"task_id,optional"`
	Action      string `json:"action,options=[IMAGINE,UPSCALE,VARIATION]"`
	Index       int64  `json:"index,optional"`
	Prompt      string `json:"prompt,optional"`
	Description string `json:"description,optional"`
	ImageUrl    string `json:"image_url,optional"`
	Status      string `json:"status,options=[PENDING,SUCCESS]"`
	CreatedAt   int64  `json:"created_at,optional"`
	UpdatedAt   int64  `json:"updated_at,optional"`
}

type (
	fetchReq {
		ID     int64  `form:"id,optional"`
		TaskId string `form:"task_id,optional"` //任务ID
	}
	fetchResp {
		Code int64  `json:"code"`
		Msg  string `json:"msg"`
		Data Task   `json:"data"`
	}
)

type (
	listReq {
	}
	listResp {
		Code int64  `json:"code"`
		Msg  string `json:"msg"`
		Data []Task `json:"data"`
	}
)

type (
	imagineReq {
		Prompt string `json:"prompt"`
	}
	imagineResp {
		Code int64                  `json:"code"`
		Msg  string                 `json:"msg"`
		Data map[string]interface{} `json:"data"`
	}
)

type (
	upscaleReq {
		TaskId string `json:"task_id"`
		Index  int64  `json:"index"`
	}
	upscaleResp {
		Code int64                  `json:"code"`
		Msg  string                 `json:"msg"`
		Data map[string]interface{} `json:"data"`
	}
)

type (
	variationReq {
		TaskId string `json:"task_id"`
		Index  int64  `json:"index"`
	}
	variationResp {
		Code int64                  `json:"code"`
		Msg  string                 `json:"msg"`
		Data map[string]interface{} `json:"data"`
	}
)